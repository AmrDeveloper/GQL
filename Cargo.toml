[package]
name = "gitql"
authors = ["AmrDeveloper"]
version = "0.40.0"
edition = "2024"
description = "A SQL like query language to perform queries on .git files"
license = "MIT"
repository = "https://github.com/amrdeveloper/gql/"
documentation = "https://github.com/amrdeveloper/gql"
readme = "README.md"
keywords = ["gitql", "gitql-sdk", "gql", "git", "sql"]
categories = ["command-line-utilities"]
exclude = [".github/**", "docs/**", "media/**", "scripts/**"]

[workspace]
members = [
    "crates/gitql-core",
    "crates/gitql-std",
    "crates/gitql-ast",
    "crates/gitql-cli",
    "crates/gitql-parser",
    "crates/gitql-engine",
]

[workspace.dependencies]
gix = { version = "0.73.0", default-features = false }
dyn-clone = { version = "1.0.20" }
comfy-table = { version = "7.2.1" }
termcolor = { version = "1.4.1" }
serde_json = { version = "1.0.145" }
csv = { version = "1.3.1" }
yaml-rust = { version = "0.4.5" }
chrono = { version = "0.4.42" }
regex = { version = "1.11.3" }
rand = { version = "0.9.2" }
indexmap = { version = "2.11.4" }
phf = { version = "0.13.1" }
linked-hash-map = { version = "0.5.6" }
uuid = { version = "1.18.1", features = ["v4"] }
gitql-core = { path = "./crates/gitql-core", version = "0.17.0" }
gitql-std = { path = "./crates/gitql-std", version = "0.17.0" }
gitql-ast = { path = "./crates/gitql-ast", version = "0.36.0" }
gitql-parser = { path = "./crates/gitql-parser", version = "0.39.0" }
gitql-engine = { path = "./crates/gitql-engine", version = "0.40.0" }
gitql-cli = { path = "./crates/gitql-cli", version = "0.40.0" }

[profile.release]
lto = true

[dependencies]
gitql-core = { workspace = true }
gitql-std = { workspace = true }
gitql-ast = { workspace = true }
gitql-parser = { workspace = true }
gitql-engine = { workspace = true }
gitql-cli = { workspace = true }

gix = { workspace = true, features = ["blob-diff", "max-performance"] }

lineeditor = "0.4.1"

[dev-dependencies]
criterion = "0.7.0"

[build-dependencies]
phf_codegen = "0.13.1"

# Run all benchmarks with `cargo bench`
# Run individual benchmarks like `cargo bench -- <regex>` e.g. `cargo bench -- tokenizer`
[[bench]]
name = "benchmarks"
harness = false
